@model IEnumerable<BUSS.Models.Destinasi>

@{
    ViewBag.Title = "Destinasi";
    ViewBag.SidebarMenu = "Destinasi";
    Layout = "~/Views/Shared/_LayoutManager.cshtml";
}

<div class="page-inner">
    <div class="page-header">
        <h4 class="page-title">@ViewBag.Title</h4>
        <ul class="breadcrumbs">
            <li class="nav-home">
                <a href="@Url.Action("Manager", "Dashboard")">
                    <i class="flaticon-home"></i>
                </a>
            </li>
            <li class="separator">
                <i class="flaticon-right-arrow"></i>
            </li>
            <li class="nav-item">
                <a href="@Url.Action("Destinasi", "Laporan")">@ViewBag.Title</a>
            </li>
        </ul>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h3 class="card-title">Data @ViewBag.Title</h3>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table" id="multi_filter">
                            <thead>
                                <tr>
                                    <th>No.</th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Nama_Destinasi)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Kota.Nama_Kota)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Jam_buka)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Jam_tutup)
                                    </th>
                                    <th>Status Data</th>
                                    <th>Rating</th>
                                    <th>Harga Tiket</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{ int rowCount = 1; }
                                @foreach (var item in Model)
                                {
                                <tr>
                                    <td>@(rowCount++).</td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Nama_Destinasi)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Kota.Nama_Kota)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Jam_buka)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Jam_tutup)
                                    </td>
                                    <td>
                                        @(item.Status == 1 ? "Aktif" : "Tidak Aktif")
                                    </td>
                                    <td>
                                        @item.Rating.ToString("0.0", System.Globalization.CultureInfo.InvariantCulture)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Harga_Tiket)
                                    </td>
                                </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <th></th>
                                    <th>Nama Destinasi</th>
                                    <th>Kota</th>
                                    <th>Jam Buka</th>
                                    <th>Jam Tutup</th>
                                    <th>Status Data</th>
                                    <th>Rating</th>
                                    <th>Harga Tiket</th>
                                </tr>
                                <tr>
                                    <th>Total</th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                </tr>
                                <tr>
                                    <th>Rata-rata</th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script src="//cdn.datatables.net/plug-ins/1.10.22/api/sum().js"></script>
    <script>
        if ("@TempData["SuccessMessage"]" != "") {
            swal("Berhasil", "@TempData["SuccessMessage"]", {
                icon: "success",
                buttons: {
                    confirm: {
                        className: 'btn btn-success'
                    }
                },
            });
        }

        if ("@TempData["ErrorMessage"]" != "") {
            swal("Gagal", "@TempData["ErrorMessage"]", {
                icon: "error",
                buttons: {
                    confirm: {
                        className: 'btn btn-danger'
                    }
                },
            });
        }

        function printDestinasi(win) {
            var table = $(win.document.body).find('table');
            var body = table.find('tbody');
            $(body).append($('#multi_filter tfoot').find('tr:eq(1)').clone());
            $(body).append($('#multi_filter tfoot').find('tr:eq(2)').clone());
        }

        $(document).ready(function () {
            $('#multi_filter').DataTable({
                dom: '<"row"<"col-lg-4"l><"col-lg-4"B><"col-lg-4"f>>rtip',
                buttons: [
                    {
                        extend: 'copy',
                        text: '<i class="fa fa-copy"></i> Copy',
                        exportOptions: {
                            columns: ':visible',
                        },
                        customize: function (win) {
                            printDestinasi(win);
                        }
                    }, {
                        extend: 'excel',
                        text: '<i class="fa fa-file-excel"></i> Excel',
                        title: 'Data Destinasi',
                        footer: true,
                        filename: 'Data Destinasi ' + moment().format('DD-MM-YYYY'),
                        exportOptions: {
                            columns: ':visible',
                        },
                        customize: function (xlsx) {
                            return xlsx + "\nAny heading for the csv file can be separated with , and for new line use";
                        }
                    }, {
                        extend: 'pdf',
                        text: '<i class="fa fa-file-pdf"></i> PDF',
                        title: 'Data Destinasi',
                        filename: 'Data Destinasi ' + moment().format('DD-MM-YYYY'),
                        exportOptions: {
                            columns: ':visible',
                        },
                        customize: function (win) {
                            printDestinasi(win);
                        }
                    }, {
                        extend: 'print',
                        text: '<i class="fa fa-print"></i> Print',
                        title: 'Data Destinasi',
                        filename: 'Data Destinasi ' + moment().format('DD-MM-YYYY'),
                        exportOptions: {
                            columns: ':visible',
                        },
                        customize: function (win) {
                            printDestinasi(win);
                        }
                    }, {
                        extend: 'colvis',
                        text: '<i class="fa fa-eye"></i>'
                    }
                ],
                lengthMenu: [
                    [10, 25, 50, -1],
                    ['10', '25', '50', 'All']
                ],
                "language": {
                    "lengthMenu": "_MENU_ Data per halaman",
                    "info": "Menampilkan _START_ sampai _END_ dari _TOTAL_ entries",
                    "zeroRecords": "Tidak ada data.",
                    "search": "Pencarian :",
                    "infoFiltered": "(tersaring dari total _MAX_ data)",
                    "paginate": {
                        "previous": "Sebelumnya",
                        "next": "Selanjutnya"
                    }
                },
                drawCallback: function () {
                    var api = this.api();

                    // SUM Harga
                    $(`tr:eq(1) th:eq(7)`, api.table().footer()).html(
                        api.column(7, { page: 'current' }).data().reduce(function (a, b) {
                            if (typeof a === 'string') {
                                a = numberOnly(a) * 1;
                            }
                            if (typeof b === 'string') {
                                b = numberOnly(b) * 1;
                            }

                            return formatter.format(a + b);
                        }, 0)
                    );

                    // SUM Rating
                    $(`tr:eq(1) th:eq(6)`, api.table().footer()).html(
                        api.column(6, { page: 'current' }).data().reduce(function (a, b) {
                            if (typeof a === 'string') {
                                a = parseFloat(a) * 1;
                            }
                            if (typeof b === 'string') {
                                b = parseFloat(b) * 1;
                            }

                            return a + b;
                        }, 0)
                    );


                    // view page column
                    var columnData = api.column(6, { page: 'current' }).data();
                    var theColumnPage = columnData.reduce(function (a, b) {
                        if (isNaN(a)) return '';
                        else a = parseFloat(a);

                        if (isNaN(b)) return '';
                        else b = parseFloat(b);

                        return a + b;
                    }, 0);

                    $(`tr:eq(2) th:eq(6)`, api.table().footer()).html(
                        parseFloat(theColumnPage / columnData.count()).toFixed(2)
                    );

                    columnData = api.column(7, { page: 'current' }).data();
                    theColumnPage = columnData.reduce(function (a, b) {
                        if (typeof a === 'string') {
                            a = numberOnly(a);
                        }
                        if (typeof b === 'string') {
                            b = numberOnly(b);
                        }

                        return a + b;
                    }, 0);


                    $(`tr:eq(2) th:eq(7)`, api.table().footer()).html(
                        formatter.format(theColumnPage / columnData.count())
                    );
                },
                initComplete: function () {
                    var columnCount = 0;
                    var api = this.api();
                    api.columns().every(function () {
                        if (columnCount != 9 && columnCount != 0) {
                            var column = this;
                            var select = $('<select class="form-control form-control-sm height-unset"><option value=""></option></select>')
                                .appendTo($(`tr:eq(0) th:eq(${columnCount})`, api.table().footer()).empty())
                                .on('change', function () {
                                    var val = $.fn.dataTable.util.escapeRegex(
                                        $(this).val()
                                    );

                                    column
                                        .search(val ? '^' + val + '$' : '', true, false)
                                        .draw();
                                });

                            column.data().unique().sort().each(function (d, j) {
                                select.append('<option value="' + d + '">' + d + '</option>')
                            });
                        }
                        columnCount++;
                    });
                }
            });
        });
    </script>
}


